const taskList = {
  topBar: {
    taskSelector: {
      Personal: 'Personal',
      Work: 'Work',
    },
    history: {
      late: 'Late',
      onTime: 'On time',
      noTime: 'No time',
    },
    taskStatus: {
      new: 'New',
      onGoing: 'On going',
      waiting: 'Waiting',
      directed: 'Directed',
      canceled: 'Canceled',
      rejected: 'Rejected',
      excicuted: 'Excicuted',
      compleated: 'Done',
    },
    tableTypeSelector: {
      active: 'Activv',
      passive: 'Passive',
      all: 'All',
    },
  },
  table: {
    tableColums: {
      taskOrderNo: 'Task order number',
      description: 'Descriptiomn',
      storyCart: 'Story cart',
      project: 'Project',
      inputDate: 'Input date',
      taskStatus: 'Task status',
      taskId: 'Tapşırıq nömrəsi',
      createdBy: 'Created by',
      assigined: 'Assigned to',
    },
    taskNature: {
      bug: 'Bug',
      newRequest: 'New request',
      changeRequest: 'Request change',
    },
  },
  rightBar: {
    notes: 'Notes',
    filter: 'Filter',
    label: 'Label',
    sprint: 'Sprint',
    rowStyle: 'Row wiev',
    kanbanStyle: 'Kanban wiev',
    addTask: 'Nev task',
    filter: 'Filter',
    closedDates: 'Closed dates',
    groupBy: 'Group by',
    sortBy: 'Sort by',
    showChildTasks: 'Show child task',
    selectAll: 'Select all',
    deSelectAll: 'Deselect all',
    project: 'Project',
    storyCart: 'Story cart',
    assignee: 'Assignee',
    closedBy: 'Closed by',
    taskType: 'Task type',
    taskNature: 'task nature',
    createdBy: 'Created by',
    priority: 'Priority',
    colums: 'Colums',
    label: 'Label',
    bank: 'Bank',
    bonus: 'Bonus',
  },
  bottomBar: {
    sortTasksByDate: 'Sort tasks by date',
    pagination: 'Pagination',
    nextPage: 'Next page',
    prewPage: 'Previous page',
  },
  calendar: {
    january: 'January',
    feburary: 'Feburary',
    march: 'March',
    april: 'April',
    may: 'May',
    june: 'June',
    july: 'July',
    august: 'August',
    september: 'September',
    october: 'October',
    november: 'November',
    december: 'December',
  },
  pageSortTasksByDate: {
    thisDay: 'Today',
    yesterday: 'Yesterday',
    last7Days: 'Last 7 days',
    last30Days: 'last 30 days',
    thisMonth: 'This month',
    lastMonth: 'Last month',
    special: 'Special',
    btnSearch: 'SEarch',
    btnCancel: 'Exit',
  },
  taskStatus: {
    new: 'New',
    onGoing: 'On going',
    waiting: 'Waiting',
    directed: 'Directed',
    canceled: 'Canceled',
    rejected: 'Rejected',
    excicuted: 'Executed',
    compleated: 'Compleated',
  },
  windowAddTask: {
    addTask: 'Add new task',
    priorityStandart: 'Standart',
    priorityHigh: 'Urgent',
    quickInsertTaskOnfocusInput: 'Quick insert task onfocus input SHIFT+ENTER',
    addCheckWords: 'Add Check Words',
    copyPasteImg: 'Copy and Paste Image Here',
    attachFile: 'Attach file',
    startDate: 'Start date',
    endDate: 'End tarixi',
    task: 'Task',
    meeting: 'Meeting',
    responsible: 'Responsible',
    catagories: 'Catagories',
    software: 'Software',
    frontEnd: 'Front end',
    backEnd: 'Back end',
    details: 'Details',
    schedule: 'Schedule',
    reapeatEvery: 'Repeat',
    runTime: 'Run time',
    intensive: 'intensive',
    weekly: 'Weekly',
    selectReminder: 'Select reminder',
    observerName: 'Observer name',
    addObserver: 'Add observer',
    subject: 'Subject',
    structure: 'Structure',
    type: 'Type',
    responsiblePerson: 'Responsible person',
    participant: 'Participant',
    counterparty: 'Counterparty',
    location: 'Location',
    note: 'Note',
    observer: 'Observer',
    events: 'Events',
    confirmationNotification: 'Notify you about the confirmation?',
    closeAfterInsert: 'After insert closed Modal',
    add: 'Add',
    close: 'Close',
  },
  windowUpdateTask: {
    description: 'Description',
    add: 'Add',
    cancel: `Cancel`,
    chooseFile: 'Choose file',
    details: 'Details',
    status: 'Status',
    new: 'New',
    ongoing: 'Continue',
    waiting: 'Waiting',
    rejected: 'REjected',
    UAT: 'UAT',
    priority: 'Priority',
    taskType: 'Task type',
    change: 'Change',
    estimatedHours: 'Estimated hours',
    spentHours: 'Spent hours',
    estimatedCounter: 'Estimated counter',
    executedCounter: 'Executed counter',
    estimatedBudget: 'Estimated Budget',
    spentBudget: 'Spent Budget',
    taskId: 'Task ID',
    taskStatus: 'Task status',
    parentTask: 'Parent task',
    childTask: 'Child task',
  },
};
